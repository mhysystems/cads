// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cads_gui.Data;

#nullable disable

namespace cadsgui.Migrations
{
    [DbContext(typeof(SQLiteDBContext))]
    [Migration("20231219033218_MajorUpdate")]
    partial class MajorUpdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("cads_gui.Data.Belt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("CordDiameter")
                        .HasColumnType("REAL");

                    b.Property<double>("Length")
                        .HasColumnType("REAL");

                    b.Property<double>("PulleyCover")
                        .HasColumnType("REAL");

                    b.Property<string>("Serial")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TopCover")
                        .HasColumnType("REAL");

                    b.Property<double>("Width")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Serial")
                        .IsUnique();

                    b.ToTable("Belts");
                });

            modelBuilder.Entity("cads_gui.Data.BeltInstall", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BeltId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Chrono")
                        .HasColumnType("TEXT");

                    b.Property<long>("ConveyorId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BeltInstalls");
                });

            modelBuilder.Entity("cads_gui.Data.Conveyor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("PulleyCircumference")
                        .HasColumnType("REAL");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Timezone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TypicalSpeed")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Conveyors");
                });

            modelBuilder.Entity("cads_gui.Data.Grafana", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Belt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Col")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Visible")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Plots");
                });

            modelBuilder.Entity("cads_gui.Data.SavedZDepthParams", b =>
                {
                    b.Property<string>("Site")
                        .HasColumnType("TEXT");

                    b.Property<string>("Conveyor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<double>("Length")
                        .HasColumnType("REAL");

                    b.Property<double>("Percentage")
                        .HasColumnType("REAL");

                    b.Property<double>("Width")
                        .HasColumnType("REAL");

                    b.Property<double>("XMax")
                        .HasColumnType("REAL");

                    b.Property<double>("XMin")
                        .HasColumnType("REAL");

                    b.Property<double>("ZMax")
                        .HasColumnType("REAL");

                    b.Property<double>("ZMin")
                        .HasColumnType("REAL");

                    b.HasKey("Site", "Conveyor", "Name");

                    b.ToTable("SavedZDepthParams");
                });

            modelBuilder.Entity("cads_gui.Data.Scan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("BeltId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Chrono")
                        .HasColumnType("TEXT");

                    b.Property<long>("ConveyorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Filepath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Scans");
                });
#pragma warning restore 612, 618
        }
    }
}
